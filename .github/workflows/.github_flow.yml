# apparantly the syntax is different for github

# This file is a template, and might need editing before it works on your project.
# This is a sample GITHUB CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 2 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.

# only does tests at the moment, and i added sklearn deprecated because this often causes issues. 
# free accounts only have limited runners, might have to check if students get more?

name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint-test-job:
    name: Lint Test Job
    runs-on: ubuntu-latest
    env:
      SKLEARN_ALLOW_DEPRECATED_SKLEARN_PACKAGE_INSTALL: "True"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install linting tools
        run: |
          echo "Installing pre-commit hooks to ensure code quality."
          pip install black ruff

      - name: Run linting
        run: |
          black .
          ruff check --fix --exit-non-zero-on-fix
          echo "No lint issues found."

  unit-test-job:
    name: Unit Test Job
    runs-on: ubuntu-latest
    needs: lint-test-job
    env:
      SKLEARN_ALLOW_DEPRECATED_SKLEARN_PACKAGE_INSTALL: "True"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.12

      - name: Set up testing environment
        run: |
          echo "Setting up testing environment"
          pip install pytest pytest-cov
          echo "Upgrading pip, setuptools, and wheel"
          pip install --upgrade pip setuptools wheel

      - name: Install project dependencies
        run: |
          echo "Installing requirements, this might take a while"
          pip install -r requirements.txt

      - name: Run tests with coverage
        run: python -m pytest --cov-report=html --cov=bif_template

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage
